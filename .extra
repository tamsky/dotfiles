# -*- shell-script -*-

# This file expects to only load in an interactive shell

#############################
# tamsky personal additions #
#############################

##############
## FUNCTIONS #
##############
# http://stackoverflow.com/a/3951175
function is_num() {
  local string=$1
  case ${string} in
      ''|*[!0-9]*) return 1 ;;
      *) return 0 ;;
  esac
}

function clean() {
  echo -n "Really clean this directory?";
  read yorn;
  if test "$yorn" = "y"; then
      rm -f \#* *~ .*~ *.bak .*.bak *.tmp .*.tmp core a.out;
      echo "Cleaned.";
  else
      echo "Not cleaned.";
  fi
}

# User interface goodies.
function xtitle () {
 echo -n -e "\033]2;$*\007"
}
function xseticon () {
 echo -n -e "\033]1;$1\007"
}
function user_xtitle () {
  if [ "$TERM" = "xterm" ]; then
     xtitle $(whoami)@$HOST
     xseticon $(whoami)@$HOST
  fi
}
function ssh () {
    command ssh "$@";
    user_xtitle
}

# rename our default color-enabled 'diff' command to 'cdiff'
if [[ $(type -t diff) == "function" ]] ;
   # note leading 'c':
   eval "c$(declare -f diff)"
   # and restore the original file command:
   unset diff
}

# `e` with no arguments opens the current directory in emacsclient, otherwise opens the
# given location
function e() {
    if [[ $# -eq 0 ]]; then
        emacs .;
    else
        emacs "$@";
    fi;
}


###################
## SHELL OPTIONS ##
###################

# Old variables vs new hotness: http://www.opensource.apple.com/source/bash/bash-30/bash/COMPAT

# Interactive comments?  I don't *think* so!
set +o interactive-comments

# If the variable command_oriented_history is set, multiple lines
# which form one command will be saved as one history entry.
# was: command_oriented_history=1
shopt -s cmdhist

# Set auto_resume if you want to resume on "emacs", as well as on
# "%emacs".
auto_resume=on

# Set notify if you want to be asynchronously notified about
# background job completion.
# was: notify=
set -o notify

# Make it so that failed `exec' commands don't flush this shell.
# was: no_exit_on_failed_exec=
shopt -s execfail


#############
## HISTORY ##
#############

# Share bash history across terms.
# http://unix.stackexchange.com/a/18443
HISTCONTROL=ignoredups:erasedups
shopt -s histappend
PROMPT_COMMAND="history -n; history -w; history -c; history -r; ${PROMPT_COMMAND}"
# Make more commands not show up in history
HISTIGNORE="ls:cd:cd -:pwd:exit:date:* --help:history:shutdown:reboot:telinit:init";


#############
## EXPORTS ##
#############

# Don't let LESS ever use the alternate screen
export LESS=-X
export PAGER="less -X"
export MANPAGER="less -X"

# This is a RedHat-ism.  Avoid their systemwide export.
export INPUTRC=

# We used to do a lot more work here trying to join $(hostname) with $(domainname)
# But this works almost all the time:
export FQDNHOSTNAME=$(uname -n)

export I_WANT_A_BROKEN_PS=true


#############
## ALIASES ##
#############

# aliases for all machines
alias nw='emacs -nw '
alias em='emacs '
alias ns='nslookup '
alias purge='/bin/rm -f *~ .*~ #*'
alias po='popd'
alias pu='pushd'
alias over='cd .. ; cd \!*'

alias j='jobs -l '
alias l='ls -ltr '
alias ls='ls -F '
alias lal='ls -alF '
alias ll='ls -lF '
alias dir='ll '
alias la='ls -aF '

alias rm='rm -i '
alias cp='cp -i '
alias mv='mv -i '

alias less='less -X '
alias m='less -X'

alias unhist='export HISTFILE='
alias nohist='export HISTFILE='

alias openports='lsof -Pnl +M -i4'

# LINUX hard console specific
alias restoreconsole="consolechars -f /usr/lib/kbd/consolefonts/lat0-sun16.psf.gz"

### OSX specific ALIASES
# show/hide dot files
alias sf="defaults write com.apple.Finder AppleShowAllFiles true; killall Finder"
alias hf="defaults write com.apple.Finder AppleShowAllFiles false; killall Finder"


###############
## SSH-AGENT ##
###############

# our old SSH gnuscreen helper, we shouldn't need it anymore:
alias forward="/bin/rm ~/.ssh-agent && touch ~/.ssh-agent && chmod 700 ~/.ssh-agent && echo export \$(env | grep -e ^SSH_AUTH_SOCK -e ^SSH_AGENT_PID) > ~/.ssh-agent"
alias agent="source ~/.ssh-agent"

# If it's not already our canonical file, and it's a SOCKET... 
# set a symlink to it at the canonical location.
[[ "${SSH_AUTH_SOCK}" != $HOME/.ssh/agent-$USER-screen ]] && \
    [[ -S ${SSH_AUTH_SOCK} ]] && \
        ln -sf ${SSH_AUTH_SOCK} $HOME/.ssh/agent-$USER-screen

# Set a canonical location.
export SSH_AUTH_SOCK_ORIG=${SSH_AUTH_SOCK}
export SSH_AUTH_SOCK="$HOME/.ssh/agent-$USER-screen"


#####################
## BASH COMPLETION ##
#####################

# Enable tab completion for `h` by marking it as an alias for `hg`
if type _hg &> /dev/null && [ -f /usr/local/etc/bash_completion.d/hg-completion.bash ]; then
    complete -o default -o nospace -F _hg h;
fi;


####################
## PER-HOST FILES ##
####################

# ALIASES
if [[ -f "$HOME/.${FQDNHOSTNAME}/bash_aliases" ]] ; then
    . "$HOME/.${FQDNHOSTNAME}/bash_aliases"
fi

## BASH_PROFILE
if [[ -f "$HOME/.${FQDNHOSTNAME}/bash_profile" ]] ; then
    . "$HOME/.${FQDNHOSTNAME}/bash_profile"
fi
